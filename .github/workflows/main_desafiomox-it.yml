name: Build and deploy Python app to Azure Web App - DesafioMox-It

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Instalacion de la version de python 
      - name: Preparando version de Python
      # Version de la "accion" que instalara Python 
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          # De la siguiente forma se instala "la mayor menor version". En este caso, la version 3.0
          # python-version: '3.x'
          # Arquitectura 'x64' o 'x86' (por defecto, este valor esta en 'x64')
          # arquitecture: 'x64'

      - name: Crear e iniciar el entorno virtual
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Instalar dependencias
        # Instala las dependencias especificadas en requirements.txt
        run: pip install -r requirements.txt
        # Tambien se puede instalar o actualizar las dependencias de esta forma
        # run: python -m pip install --upgrade pip
        
      - name: Utilizando Ruff
        run: |
          pip install ruff
          ruff check --output-format=github .

      - name: Instalar Tox
        run: pip install tox
        
      - name: Ejecutar tox
        run: tox -e py
        
      - name: Pruebas con pytest
        run: |
          pip install pytest pytest-cov
          # Ejecucion del archivo tests.py
          pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

      - name: Comprimir artefactos para el despliegue
        run: zip release.zip ./* -r

      - name: Subir artefatos para desplegar el trabajo
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Descargar artefactos 
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Descomprimir artefactos para el despliegue
        run: unzip release.zip
      
      - name: Loguear en Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EF942EA61DAC4A698398B7AF083E9A57 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_22225D5E7F9A446CB9D2F3D70B7D5086 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_2CA29891295E4BEFB92CD1605575FD3E }}

      - name: 'Desplegar en Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          # Nombre de la aplicaci√≥n
          app-name: 'DesafioMox-It'
          # Nombre del slot
          slot-name: 'Production'
          